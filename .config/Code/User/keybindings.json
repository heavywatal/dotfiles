// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-r.runAboveChunks",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl-g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl-[",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions"
    },
    {
        "key": "ctrl+j",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+m",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "workbench.action.terminal.runSelectedText",
        "when": "editorTextFocus && resourceExtname != .ipynb"
    },
    {
        "key": "ctrl+enter",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.terminal.runSelectedText",
            "cursorDown",
            "cursorLineStart",
          ]
        },
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+enter",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.terminal.runSelectedText",
            "cursorDown",
            "cursorLineStart",
          ]
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t o",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "shift+cmd+t",
        "command": "workbench.view.testing.resetViewLocation"
    },
    {
        "key": "shift+ctrl+down",
        "command": "cursorColumnSelectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+left",
        "command": "cursorColumnSelectLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+right",
        "command": "cursorColumnSelectRight",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+up",
        "command": "cursorColumnSelectUp",
        "when": "editorTextFocus"
    },
    {
      "key": "cmd+f",
      "command": "-list.find",
      "when": "listFocus && listSupportsFind"
    },
]